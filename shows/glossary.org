* Glossary							   :noexport:
#+name: gloss
| Term                   | Plural        | Description                                                                                                                                                                           |
|------------------------+---------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| ADSR                   |               | An Attack-Decay-Sustain-Release envelope                                                                                                                                              |
| aliasing               |               | In digital sampling, frequencies above the Nyquist frequency ``fold over'' and are heard as lower frequencies. This is \emph{aliasing}                                                |
| allpass                |               | A filter (really, delay line) that has no effect on a sound's frequency content, but changes the phases. No audible effect until you mix it with the original                         |
| allpass filter         |               | A feedback-delay filter that does not change the strength of the frequencies, only the phases                                                                                         |
| amplitude modulation   |               | Multiplying two signals together. If both signals' frequencies are in the range of human hearing, interesting things happen                                                           |
| argument               |               | An input to a function or method, provided at the time of calling it                                                                                                                  |
| array                  |               | One type of collection, consisting of an ordered list of items, enclosed in square brackets \cd{[ ]}                                                                                  |
| arrayed control        |               | An array of control inputs to a synth, grouped under one name. You can send flat (one-dimensional) arrays of values to that name                                                      |
| assignment             |               | To replace a variable's current value with a new object. Written \cd{name = value}                                                                                                    |
| asynchronous           |               | An operation that finishes after the program has already moved on. SC handles asynchronous actions by completion functions or syncing                                                 |
| audio rate             |               | The UGen rate that produces one output value for every sample going to the audio hardware. Use for audio signals                                                                      |
| band-limited           |               | A spectrum containing a finite range of frequencies. Important because digital audio cannot represent infinite frequencies                                                            |
| beat                   |               | The unit of time in a TempoClock. A beat's duration depends on the clock's tempo, given in beats per second. If the tempo is 2 bps, 1 beat = 0.5 seconds                              |
| block calculation      |               | A way to make signal processing more efficient, by calculating several samples of audio in one cycle and eliminating many flow-of-control instructions                                |
| Boolean                |               | Either \emph{true} or \emph{false}, not both. Conditions for \emph{branching} are Boolean: if true, take this branch; if false, do something else                                     |
| branching              |               | Control structures for branching make decisions, choosing one execution path from two or more alternatives                                                                            |
| breakpoint             |               | The endpoint of a line segment in an envelope                                                                                                                                         |
| Brownian motion        |               | A ``random walk'': Imagine a particle that moves a random amount in each step. The trace it leaves behind is Brownian motion                                                          |
| bus                    | buses         | The server uses audio and control buses to communicate signals between synth nodes. NodeProxies handle the buses for you. Sometimes you need to manage them yourself                  |
| callback               |               | A function that executes in response to an event in some other part of the system. If you make a GUI button, a click needs to ``call back'' into your code                            |
| carrier                |               | In frequency or phase modulation synthesis, the signal being modulated. The carrier is connected to the audio output                                                                  |
| chaotic                |               | Chaotic functions are dynamic systems with large differences in the results based on small differences in the inputs. They sound like something between normal waves and random noise |
| chorus                 |               | An effect that detunes a signal by delaying it slightly, and changing the delay time. Chorus uses a standard delay line, e.g. \ci{DelayL}                                             |
| class                  | classes       | An object definition, consisting of variables (for data storage) and methods (for the object's operations)                                                                            |
| clock                  |               | A scheduler. Functions or Routines scheduled on the clock will wake up at the given time, and they will reschedule if the return value is a number                                    |
| collection             |               | An object that contains several other objects, and supports individual access (``at'') and/or iteration (``do'', ``collect'')                                                         |
| comb filter            |               | A feedback-delay filter using a simple delay, whose fundamental frequency is $\frac{1}{t}$ ($t$ is the delay time). Its spectrum resembles the teeth of a comb                        |
| constructor            |               | A method that creates an instance of a class. Common constructors in SC are \ci{new}, \ci{newFrom}, \ci{ar}, \ci{kr} and \ci{ir} for UGens                                            |
| control cycle          |               | For efficiency, the SC server calculates audio in blocks. By default, one block is 64 samples. A block is one control cycle. \ci{kr} UGens calculate one sample per cycle             |
| control input          |               | An argument of a synthesis function. The server exposes control inputs to be set from the language client: \cd{synth.set(\textbackslash name, newValue);}                             |
| control rate           |               | The UGen rate that produces one output value per calculation cycle (by default, 64 audio samples). Use for slower-moving control signals                                              |
| controller             |               | In MVC, the object that connects the model and the view. The controller decides how user actions translate into the model, and how the model's changes affect the display             |
| crossfade              |               | A way to join audio segments by fading the first one out while the second is fading in                                                                                                |
| declarative            |               | A style of programming that describes the desired result, and allows the software to handle the details. SC patterns are more like declarative code                                   |
| declare                |               | Of a variable, to define its name and initial value using a ``var'' statement                                                                                                         |
| default                |               | A value that will be used unless you specify another value. E.g., the default frequency for \cd{SinOsc.ar} is 440 Hz                                                                  |
| degree                 |               | A property of an event, specifying a diatonic scale degree. Many scale patterns are available                                                                                         |
| delta                  |               | How long to wait until the next event. SuperCollider terminology for Inter-Onset Interval (IOI)                                                                                       |
| destructor             |               | A method that releases, or destroys, an instance that is no longer needed. Common destructors are \ci{free} and \ci{remove}                                                           |
| doneAction             |               | A UGen parameter that determines node releases when the UGen is finished. Most typically 0 (do nothing) or 2 (free only this synth)                                                   |
| envelope               |               | A control signal that shapes amplitude or another parameter. Important for note control. A standard shape is ADSR                                                                     |
| envelope generator     |               | The standard name for the unit in a synthesizer that produces an envelope signal from the envelope's parameters                                                                       |
| environment            |               | Named storage for objects, which can be retrieved using the convenient variable-like syntax \cd{\textasciitilde name}                                                                 |
| equal temperament      |               | A tuning system where the intervals between chromatic steps are all equal. The frequency ratio for $n$-ET is $\sqrt[n]{2} = 2^{\frac{1}{n}}$. $\sqrt[12]{2} \approx 1.059463$         |
| equal-power            |               | A type of crossfade where the volume that you hear is equal throughout. The square root \ci{sqrt} of a linear envelope makes an equal-power envelope                                  |
| equivalent             |               | Objects are equivalent if they have the same contents. ``Identical'' is more strict. \ci{"abc"} and \ci{"ab" ++ "c"} are equivalent but not identical                                 |
| event type             |               | A Symbol, stored under the name ``type,'' indicating which action function should interpret the event's values and take action. Normally \ci{\textbackslash note}                     |
| exciter                |               | In modal synthesis, a short burst of noise fed into a ringing filter, to ``excite'' the filter so that it oscillates                                                                  |
| exponential            |               | A unit of measurement that works by multiplication. If $f$ is a frequency, ``up an octave'' is $2f$                                                                                   |
| feedback-delay filter  |               | A filter based on delay a signal, and feeding the delayed copy back to the input. Comb and Allpass filters are feedback-delay types                                                   |
| filter                 |               | A signal processor that changes a sound's spectrum                                                                                                                                    |
| flanger                |               | An effect that adds a metallic, buzzing ``whoosh'' to a sound. It works like chorus, but uses a feedback delay, e.g. \ci{CombL}                                                       |
| formant                |               | A formant is one of the resonances in the vocal cavity, coloring the ``buzz'' coming from the vocal cords. The right combination of formants can produce vowel sounds                 |
| frame                  |               | In a multichannel sound file or buffer, a frame is one sample for each channel, all at the same time index                                                                            |
| frequency modulation   |               | A type of synthesis that produces complex spectra by modulating the frequency of a simple waveform                                                                                    |
| frequency response     |               | Of a filter, the relative change of amplitude at different frequencies. Usually plotted as gain over frequency                                                                        |
| fundamental            |               | The lowest frequency of a harmonic series. In a pitched sound, the fundamental is the main pitch you hear                                                                             |
| gate                   |               | Related to triggers. The gate is ``open'' when > 0, and closed when $\le$ 0. Used with sustaining envelopes such as ADSR                                                              |
| global                 |               | Referring to a variable that is available everywhere in the system. Interpreter variables a--z are global                                                                             |
| grain                  |               | One component in a granular cloud: a short (10--100 ms) fragment of sound, shaped by an envelope                                                                                      |
| granular               |               | A type of synthesis that makes complex sounds by overlapping clouds of ``grains'' (very short fragments of recorded audio)                                                            |
| group                  |               | In the server, you can keep related Synths together by putting them in the same group. Groups help you manage node order                                                              |
| harmonic               |               | (n) An integer multiple of a fundamental frequency. (adj) Describes a spectrum where the frequencies are in harmonic (integer) relationships                                          |
| identical              |               | Two expressions have identical results if they return the same object. Compare to ``equivalent''                                                                                      |
| imperative             |               | A style of programming focusing on precise instructions---commands---that the computer should execute. Compare ``declarative'' programming                                            |
| impulse                |               | In theory, an infinitely short burst of sound. In practice, a single non-zero sample (shortest possible digital sound) surrounded by silence                                          |
| impulse response       |               | A filter's output when given a single-sample impulse in the input. This is one way to describe a filter's behavior                                                                    |
| infinite loop          |               | A programming error in which a loop never stops. The loop will try to execute forever, blocking all other activities in sclang                                                        |
| inharmonic             |               | In an inharmonic spectrum, the frequencies are not integer multiples of a fundamental. Noisy and metallic sounds often have inharmonic components                                     |
| initial rate           |               | The UGen rate that calculates one output value at the beginning of the synth, and holds it as a constant                                                                              |
| instance               |               | If a class is like a blueprint for a house, an instance is the real house that you can live in. Two instances of the same class will behave alike, but hold different information     |
| interpreter            |               | Referring to the single-letter variables a--z                                                                                                                                         |
| IOI                    |               | ``Inter-Onset Interval'': The amount of time between successive note beginnings. SuperCollider Events refer to this as \ci{delta}                                                     |
| iteration              |               | Performing the same operation several times, over items in a collection or a series of numbers                                                                                        |
| JITLib                 |               | The "Just-In-Time" Library. A system of ``proxies'' that allow you to define a synthesis structure and fill in the details a piece at a time                                          |
| Karplus-Strong         |               | A technique to synthesize plucked strings, using a feedback-delay filter with a lowpass filter in the feedback loop                                                                   |
| key                    |               | In a Dictionary or Association, the object that identifies the value. That is, \cd{aDictionary[key]} returns the value associated with the key                                        |
| latency                | latencies     | It takes time for mic input to reach SC, and also for SC's calculations to reach the speakers. This time is \emph{latency}                                                            |
| LFO                    |               | Low-Frequency Oscillator, commonly used as a modulation source to control synthesis parameters                                                                                        |
| linear                 |               | A unit of measurement that works by addition, like semitones or MIDI note numbers. Or, envelope segments that are straight lines (compare to ``equal-power'')                         |
| literal                |               | A value that comes ``literally'' from the written code: numbers (1, 1.5), \cd{"strings"}, \cd{\textbackslash symbols}, characters \cd{\$a}, and arrays with ``\#'' \cd{\#[1, 2]}      |
| live coding            |               | Performing digital music by writing the code in front of of the audience. The performance should reveal the relationship between code and sound                                       |
| local                  |               | Referring to a variable that exists only within a class, method or function definition. The variable is completely unavailable outside that scope                                     |
| looping                |               | Control structures for looping run the same operation many times, in a loop                                                                                                           |
| loopNode               |               | In an envelope, the breakpoint to which the envelope generator will jump after reaching the releaseNode, while ``gate'' > 0                                                           |
| method                 |               | An action which an object can perform. Very similar to a function, but it belongs to a class and has a name                                                                           |
| method call            |               | A request to an object to perform one of its predefined actions. It consists of three parts: receiver, selector and arguments                                                         |
| modal synthesis        |               | A technique to simulate the vibrating modes in a body that has been struck. It uses a short burst of noise to excite a bank of ringing filters                                        |
| mode                   |               | In a vibrating body, a mode is one of the consistent patterns of vibration. Real objects vibrate in many modes at once, producing many frequencies                                    |
| model                  |               | In MVC, the model is the object that holds real information and does real work. A NodeProxy may serve as a model                                                                      |
| modular                |               | This workshop presents a modular approach to synthesis: Each component performs a small part of the work, and you can replace components freely                                       |
| modulation             |               | Using a signal to control a synthesis parameter. Adds variety to simple synthesis techniques                                                                                          |
| modulation index       |               | In frequency or phase modulation synthesis, the amplitude of the modulator. A higher index produces a more complex spectrum                                                           |
| modulator              |               | In frequency or phase modulation synthesis, the signal that controls the carrier's behavior                                                                                           |
| multichannel expansion |               | Math operators and UGens ``expand'' an array of inputs into an array of results: [1, 2] * 2 = [2, 4]. Convenient for stereo processing                                                |
| normalize              |               | A standard numeric range, either 0--1 or --1--1: easy to convert to any other range. Or, normalized audio has been amplified so its peak sample is at a desired level                 |
| Nyquist                |               | In digital sampling, the highest possible frequency is $\frac{sr}{2}$, where $sr$ is the sampling rate                                                                                |
| ordered                |               | Of a collection, indicates that the collection remembers the order of items, e.g., Array, List                                                                                        |
| OSC                    |               | Open Sound Control. A communication protocol to send light, but structured, messages over a network                                                                                   |
| oscillator             |               | A waveform generator, based on the fact that sound waves ``oscillate'' above and below normal air pressure                                                                            |
| path                   |               | A /-separated string, giving a location in a tree structure. File paths go through directories. OSC command paths use slashes the same way                                            |
| pattern                |               | An object that describes a stream of values without requiring the programming logic to be repeated. The pattern object makes Streams that perform the calculations                    |
| phase                  |               | The starting angle, usually given in radians, of a sine wave or any cyclical waveform---effectively, a horizontal shift that doesn't affect the wave's shape                          |
| phase modulation       |               | Similar to frequency modulation, but the modulator is applied to the oscillator's phase input. This avoids a problem of FM, in which the frequency may deviate off center             |
| phaser                 |               | An effect that adds a spacey ``whoosh'' to a sound. It works like chorus, but uses an allpass delay, e.g. \ci{AllpassL}                                                               |
| pitch class            | pitch classes | A pitch number, without considering the octave. Usually C = 0, going up to B = 11                                                                                                     |
| polymorphism           |               | In Object-Oriented Programming, a single method name can do different things to different objects. Functions and Events both \ci{play}, but not the same way                          |
| proxy                  | proxies       | A placeholder that allows you to define connections between modules independent of each module's content                                                                              |
| psSet                  |               | A NodeProxy ``modifier,'' telling the proxy to use the pattern to set controls in the proxies within a ProxySpace                                                                     |
| pulse wave             |               | A waveform that jumps suddenly up and down and stays flat in between                                                                                                                  |
| pulse width            |               | The percentage of an oscillation spent above rather than below the center line. 50\% makes a square wave                                                                              |
| Q                      |               | Short for a filter's \emph{quality}                                                                                                                                                   |
| quality                |               | The ``precision'' of a filter. High Q produces sharp slopes in the frequency response, narrower bandwidth and higher resonance. Mathematically, $\frac{f_c}{\Delta f}$                |
| quantization           |               | Forces the start or stop of a process, or a change to a proxy, to happen on a barline or beat within a bar. This helps coordinate several processes                                   |
| radian                 |               | A measure of angle. $2\pi$ radians = $360$\textdegree. Much of audio theory is based on trigonometry, where radians are more convenient                                               |
| rate                   |               | Of a UGen, its calculation rate: audio rate, control rate or initial rate                                                                                                             |
| receiver               |               | In a method call, the object that determines which method definition is used                                                                                                          |
| releaseNode            |               | In an envelope, the breakpoint where the envelope generator will pause (or loop back) as long as ``gate'' > 0                                                                         |
| reverb                 |               | Short for ``reverberation.'' Simulates the effect of a sound bouncing off surfaces in a room. Adds realism to a mix                                                                   |
| ring time              |               | In Ringz, Klank and Formlet, the time for the filter's resonance to decay to -60 dB. The longer the ring time, the narrower the bandwidth (higher Q)                                  |
| ringing filter         |               | A filter that "rings" at the given frequency in response to a burst of noise. Its impulse response is a decaying sine wave. See Ringz, Klank and Formlet                              |
| sample-and-hold        |               | A standard synthesizer trick for random-number generation: \emph{sample} a value from a waveform and \emph{hold} it until the next sample                                             |
| sawtooth               |               | A waveform that makes a ramp in one direction and a sudden jump in the other, looking somewhat like teeth of a saw                                                                    |
| scheduler              |               | An object that registers actions and times to execute them. Each action will wait until its given time to execute. \ci{Clock}s implement schedulers in SC                             |
| scide                  |               | SuperCollider Integrated Development Environment. The main code-interaction interface                                                                                                 |
| sclang                 |               | SuperCollider language. Evaluates code and displays results                                                                                                                           |
| scsynth                |               | SuperCollider synthesis server. Receives OSC messages and produces audio                                                                                                              |
| segment                |               | In an envelope, a breakpoint consisting of a target value, time and curve                                                                                                             |
| selector               |               | In a method call, the method's name                                                                                                                                                   |
| spectrum               | spectra       | The frequency content of a sound, measured as the amount of energy at different frequencies                                                                                           |
| square wave            |               | A pulse wave with a width of 50\%                                                                                                                                                     |
| time point             |               | A way of representing rhythm relative to barlines: 2 means two beats after the barline, not two beats later than now. See \ci{Pdelta} for converting time points to deltas            |
| triangle wave          |               | A waveform made of straight, diagonal lines up and down                                                                                                                               |
| trigger                |               | In the server, a trigger happens when a signal crosses 0: i.e., when the previous sample was $\le$ 0 and the current sample is > 0                                                    |
| UGen                   |               | A Unit Generator, defining a signal-processing operation that runs in the audio server                                                                                                |
| unordered              |               | Of a collection, indicates that the collection may rearrange the items' order for faster lookup, e.g., Set, Dictionary                                                                |
| variable               |               | A placeholder for an object, necessary to recall an object later and address method calls to it                                                                                       |
| view                   |               | A GUI widget onscreen, like a slider, knob or button. A view is also the physical interface component of MVC design                                                                   |
| wavetable              |               | A single cycle of a waveform stored in a sampling buffer, or an oscillator that plays back the wavetable at a given frequency                                                         |
| wavetable format       |               | A way of storing repeating waveforms to make wavetable oscillators more efficient. A wavetable buffer needs twice as many numbers as audio samples in the waveform                    |
| send                   |               | The mechanism for shared effects in a conventional mixing board. A send copies the signal to another target; you hear both the original and processed copies                          |
| waveshaping            |               | Uses a \emph{transfer function} to change a waveform. Look up the input signal's value on the $x$ axis; the $y$ value is the shaper's output                                          |
| transfer function      |               | In waveshaping, the transfer function maps the input values onto the output                                                                                                           |


# | sustain                |         | In an event, the number of beats to wait before closing a sustaining envelope's gate                                                                                                  |


* Classes 							   :noexport:
#+name: class
| Term               | Plural               | Description                                                                                                                                                        |
|--------------------+----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| AppClock           |                      | A permanent clock, which always ticks in seconds. It is lower-priority, thus, less likely to interfere with musical activity. Required for GUI actions             |
| Array              |                      | An ordered list of items with a fixed maximum number of items. When adding, be sure to reassign: \cd{array = array.add(item)}                                      |
| Association        |                      | An object that links an identifier (the ``key'') to another object (the ``value''). Dictionaries act like collections of Associations                              |
| Buffer             |                      | An object in the audio server that can hold large amounts of audio or other data. Used for sample playback and soundfile input/output                              |
| Button             |                      | A multi-state button that responds to user clicks. Each state has a label, text color and background color                                                         |
| Clock              |                      | The general class of schedulers. Any actions scheduled at a given time will wait until that time to execute. See TempoClock, SystemClock and AppClock              |
| ControlSpec        |                      | Defines a numeric range, with low and high values, a curve, step size (for quantization) and a default value                                                       |
| DebugPbind         |                      | An extension class in the \emph{ddwPatterns} Quark, which prints every step of a Pbind's evaluation to the post window                                             |
| Dictionary         | Dictionaries         | An unordered set of associations \cd{key -> value}. \cd{dictionary[key]} returns the value for that key                                                            |
| Env                |                      | Defines an envelope specification, based on segments (target values, times and curves)                                                                             |
| Environment        |                      | A specialized type of IdentityDictionary, which you can enter (\ci{push} or \ci{use}). \ci{\textasciitilde envirVars} look in the current environment              |
| Event              |                      | Stores information like IdentityDictionary. Playing an event gets musical results: play a note, change values etc. Patterns can produce events for sequencing      |
| EventStreamPlayer  |                      | Gets Events from an event stream. It plays each one in turn, and then waits event's delta time before retrieving the next event                                    |
| File               |                      | Read and write text or binary files on the local filesystem                                                                                                        |
| FlowView           |                      | A \emph{container view} that automatically lays out its children, left to right, top to bottom. You don't have to think about views' positions, only their sizes   |
| FormantTable       |                      | An extension class (from sc3-plugins) listing filter parameters for different voice types and vowels                                                               |
| Function           |                      | A code block, with local variables and arguments, that can be executed at any time by calling ``value'' on it. A function always returns exactly one result object |
| FunctionList       |                      | A collection of functions that can be evaluated just like a single function                                                                                        |
| IdentityDictionary | IdentityDictionaries | Like Dictionary, but restricts the types of keys for faster lookup. Usually the keys are Symbols                                                                   |
| IdentitySet        |                      | Like Set, but restricts the types of items for faster membership testing                                                                                           |
| Knob               |                      | A GUI widget that draws a rotating knob in a window. The natural range is normalized: 0.0--1.0                                                                     |
| List               |                      | An ordered list of items that can expand at will. No need to reassign: \cd{list.add(item)}                                                                         |
| MIDIdef            |                      | MIDIdef is global, named storage for MIDIFuncs, just like OSCdef is global storage for OSCFuncs                                                                    |
| MIDIFunc           |                      | Receives incoming MIDI messages. Its design is very much like OSCFunc; only the specific parameters differ                                                         |
| MIDIOut            |                      | Sends MIDI messages to hardware or other applications                                                                                                              |
| MixerChannel       |                      | An extension class in the ``ddwMixerChannel'' quark, inspired by the mixing and routing controls found in recording studios and DAWs                               |
| NetAddr            |                      | Represents a port for network communication: an IP address (e.g. \cd{"127.0.0.1"}) and a port number                                                               |
| NodeProxy          | NodeProxies          | A hot-swappable placeholder for a Synth on the server                                                                                                              |
| OSCdef             |                      | Like Pdef and Tdef, OSCdef is global storage for OSCFunc responders                                                                                                |
| OSCFunc            |                      | Receives Open Sound Control messages. The ``Func'' is a callback function, whose arguments are \cd{msg, time, addr, recvPort}                                      |
| OutputProxy        | OutputProxies        | One channel of a multichannel UGen. The SynthDef builder has to track connections to individual channels. OutputProxy is the individual connection                 |
| Pbind              |                      | An Event Pattern that collects values from child patterns under their names                                                                                        |
| Pdef               |                      | Global storage for pattern proxies, where the patterns produce sequencing events                                                                                   |
| Pdefn              |                      | Global storage for pattern proxies, where the patterns produce simple values                                                                                       |
| Pdelta             |                      | A filter pattern that accepts a sequence of time points, and returns deltas appropriate for the given bar length                                                   |
| Pdict              |                      | A Pattern that looks up subpatterns from a Dictionary, and embeds the subpatterns into the output stream in turn                                                   |
| Pexprand           |                      | A Pattern that generates random numbers with an exponential distribution. The values tend toward the low end                                                       |
| Pgeom              |                      | A Pattern yielding a geometric series. Each value is the previous value times a given growth factor                                                                |
| Pif                |                      | A branching pattern: \cd{Pif(booleanPatt, truePatt, falsePatt)}. The condition is evaluated for every output value---the true and false branches are interleaved   |
| Pkey               |                      | A pattern that reads a value from the given name from the event currently being processed. Child patterns can share information this way                           |
| Place              |                      | Interlaces values from subarrays. See its help file for details                                                                                                    |
| Platform           |                      | Holds settings and file paths that are specific to the operating system                                                                                            |
| Pn                 |                      | A pattern that repeats a value or pattern /n/ times. If /n/ is \ci{inf}, it will repeat as many times as needed                                                    |
| Pnsym              |                      | Like \ci{Psym}, but the named patterns should yield simple values, not events                                                                                      |
| Pnsym1             |                      | Like \ci{Psym1}, but the named patterns should yield simple values, not events                                                                                     |
| Prand              |                      | A Pattern to choose values randomly from an array                                                                                                                  |
| ProxySpace         |                      | An Environment that automatically makes a NodeProxy from any item in it                                                                                            |
| ProxySubmix        |                      | A JITLib class that implements \emph{sends}. Add proxies to it, and they can all feed together into a shared effect                                                |
| Pseq               |                      | A Pattern to return values from an array, one by one                                                                                                               |
| Pseries            | Pseries              | A Pattern yielding an arithmetic series. Each value is the previous value plus a given step size                                                                   |
| Pshuf              |                      | Read items from a list in random order, using all items before repeating---i.e., ``shuffle'' the items                                                             |
| Pslide             |                      | ``Slides'' across an array of items. For instance, 0 1 2 3 1 2 3 4 2 3 4 5 and so on                                                                               |
| Pswitch1           |                      | A branching pattern, like \ci{Psym1} and \ci{Pnsym1}, but it takes an \emph{array} of patterns instead of a dictionary, and it uses numbers instead of names       |
| Psym               |                      | Higher-level pattern structure. Given a Dictionary \cd{(name: pattern, name: pattern...)} and a pattern returning the names, evaluate the pattern for each name    |
| Psym1              |                      | A branching structure for patterns. Like \ci{Psym}, but it yields one event from a named pattern before switching to another name                                  |
| Ptempo             |                      | A pattern that returns the current clock's tempo. Useful for scaling beats into seconds: $sec = beats \div tempo$                                                  |
| Ptime              |                      | A pattern that returns the number of beats since the pattern started running                                                                                       |
| PTimePoints        |                      | A filter pattern operating on event patterns (like Pbind). Write the time points into \ci{\textbackslash timept}, and PTimePoints will handle the timing           |
| Pwhite             |                      | A Pattern that generates random numbers between low and high boundaries, with a linear distribution                                                                |
| Pwrand             |                      | A Pattern to choose values randomly from an array, with a different probability for each item                                                                      |
| Pxrand             |                      | A Pattern to choose values randomly from an array, without repeating the same one twice in a row                                                                   |
| Rect               |                      | Represent a rectangular area: \cd{Rect(left, top, width, height)}. Used for GUI object boundaries                                                                  |
| Rest               |                      | Used in a Pbind's child pattern, a Rest object marks the event as a rest. The event will be produced and will take up the given delta time, but not make any sound |
| Routine            |                      | Executes a Function. The function may \ci{yield} a value, and the next call into the routine will resume just after the yield                                      |
| Scale              |                      | A repository of scale and mode patterns. \cd{Scale.ionian} gives you a major scale, [0, 2, 4, 5, 7, 9, 11]                                                         |
| ServerOptions      |                      | Configuration options for scsynth, including soundcard, are variables in this class. \cd{s.options} controls the bootup options for \ci{s}                         |
| Set                |                      | An unordered collection of items, optimized for iteration and testing membership: \cd{set.do}, \cd{set.includes(item)}                                             |
| Signal             |                      | A special-purpose array that can hold only numbers. It supports some methods that are valid only for audio data                                                    |
| SimpleController   |                      | A good controller for MVC design. It attaches separate functions to the Symbol identifying the type of notification                                                |
| Slider             |                      | A GUI widget that draws a draggable slider in a window. The natural range is normalized: 0.0--1.0                                                                  |
| SoundFile          |                      | Read and write audio files from the language (no server involvement). See \ci{Buffer} for reading and writing files in the server                                  |
| Stream             |                      | A category of classes representing sequences of values, of which \ci{Routine} is the most common. One value is returned by calling \ci{next} on the stream         |
| String             |                      | A list of characters that behaves like text                                                                                                                        |
| Symbol             |                      | Like a String, but ``atomic'': You can't manipulate the contents of a Symbol, only use it as an identifier                                                         |
| Synth              |                      | Represents a synthesis node on the server                                                                                                                          |
| SynthDef           |                      | A Synthesis Definition. A fixed collection of unit generators, defining specific signal paths among them                                                           |
| SystemClock        |                      | A permanent clock, which always ticks in seconds                                                                                                                   |
| Task               |                      | A placeholder for a Routine. Replaying a Task after stopping will continue just after the stopping point                                                           |
| Tdef               |                      | Global storage for Tasks. Give the task function a name, and Tdef will treat the function as a Task                                                                |
| TdefAllGui         |                      | A graphical control panel allowing you to play and stop Tdef tasks interactively                                                                                   |
| TempoClock         |                      | The clock normally used for musical sequencing. You can set its tempo, and have as many TempoClocks as you need, with different tempi                              |
| Tuning             |                      | A repository of tuning systems. \cd{Tuning.et12} gives you 12-tone equal temperament                                                                               |
| Updater            |                      | A good controller for MVC design. It receives all notifications coming from the model. Use branching structures in the function to take the right action           |
| Wavetable          |                      | Very much like Signal, but it's data should be in wavetable format                                                                                                 |
| Window             |                      | A GUI object representing a window on screen                                                                                                                       |


* Methods							   :noexport:
#+name: mth
| Term                | Plural | Description                                                                                                                                                                |
|---------------------+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| ++                  |        | Concatenate (join) two arrays: \cd{[0, 1, 2] ++ [10, 11, 12]} $\to$ \cd{[0, 1, 2, 10, 11, 12]}                                                                             |
| add                 |        | For SynthDefs, add the definition into the server so that it can be played. For Collections, add a new item                                                                |
| addDependant        |        | \cd{model.addDependant(listener)} registers \ci{listener} as a dependent of \ci{model}. The listener will receive notifications from the model                             |
| addFunc             |        | An easy way to create lists of functions. You don't have to worry about whether you already have a \ci{FunctionList}. See also \ci{removeFunc}                             |
| addMix              |        | A method of \ci{ProxySubmix}, equivalent to creating a send for a channel in an audio workstation                                                                          |
| addSpec             |        | Attach a ControlSpec to a NodeProxy's input, for safe GUI control                                                                                                          |
| adsr                |        | \cd{Env.adsr} makes an attack-decay-sustain-release envelope. Should be used with a gate rather than trigger                                                               |
| alloc               |        | \cd{Buffer.alloc(server, numFrames, numChannels)} reserves memory in the server for a new buffer                                                                           |
| ar                  |        | Create an audio-rate instance of a UGen. The arguments to ``ar'' establish connections to other UGens                                                                      |
| asPattern           |        | An extension method (``ddwCommon'' quark) that makes a pattern from an object. Most objects just repeat themselves in the pattern: \cd{Pn(object, inf)}                    |
| asr                 |        | \cd{Env.asr} makes an attack-sustain-release envelope: like \cd{Env.linen} but the sustain phase is gated rather than timed                                                |
| asSignal            |        | Convert a Wavetable object back into a Signal                                                                                                                              |
| asStream            |        | Produce a Stream from another object (usually a Pattern)                                                                                                                   |
| asWavetable         |        | Given a single cycle of a waveform, as a \ci{Signal} object, convert it to wavetable format. The resulting Wavetable will be twice as big as the Signal                    |
| at                  |        | Retrieve an item from an indexed collection (e.g. Array or Dictionary) by its index. Shortcut syntax: \cd{collection[index]}                                               |
| atKlank             |        | Get filter parameters from FormantTable, suitable for use in Klank                                                                                                         |
| beatsPerBar         |        | A TempoClock's meter (time signature). You can change it, but only on a barline. That barline becomes the basis for future bar/beat calculations                           |
| blockSize           |        | A variable in \ci{ServerOptions}, setting the number of samples in one control block. The default is 64                                                                    |
| case                |        | A branching control structure. Takes pairs of conditions and actions; and executes the action for the first condition that is true                                         |
| changed             |        | This method broadcasts a notification from the receiver to any dependents that have been registered with \ci{addDependant}                                                 |
| clip                |        | Constrain a number within a range. If the number is outside the range, clip it to the low or high boundary                                                                 |
| clump               |        | Group the items of a flat array into equally-sized chunks. \cd{[0, 1, 2, 3, 4].clump(2)} returns \cd{[[0, 1], [2, 3], [4]]}                                                |
| coin                |        | A weighted coin toss: \cd{0.coin} is always false; \cd{1.coin} is always true. \cd{0.5.coin} is equally weighted. The receiver may also be a pattern of numbers            |
| collect             |        | A looping structure, like \ci{do}, which collects the results of the loop function into a new collection. Like \ci{map} in many other languages                            |
| count               |        | Returns a count of items in a collection that meet a condition, written as a function                                                                                      |
| cpsmidi             |        | Convert a frequency in Hz to a MIDI note number                                                                                                                            |
| curvelin            |        | Convert a curved input range (inMin, inMax) to a linear output range (outMin, outMax) with a user-specified curve factor                                                   |
| defer               |        | Postpone (``defer'') an action to run later, on a lower-priority clock. Most operations on GUI objects should be deferred, or they could break musical timing              |
| difference          |        | Given two sets, return the items in the first that do not exist in the second. May also be written \cd{setA - setB}                                                        |
| differentiate       |        | Returns an array $y$ where $y_0 = x_0 - 0$, $y_1 = x_1 - x_0$ and so on                                                                                                    |
| distort             |        | Applies basic, middle-of-the-road distortion to a signal. The transfer function is $\frac{x}{\lvert x\rvert+1}$                                                            |
| do                  |        | A looping structure that runs a Function several times. Many types of objects can \ci{do}: usually numbers or collections                                                  |
| doAdjacentPairs     |        | ``Do'' a function over pairs of items, but advance through the array by one each time. Most items will be touched twice                                                    |
| drop                |        | On an array, remove $n$ items. If $n > 0$, remove the first $n$; if $n < 0$, remove the last $n$                                                                           |
| dup                 |        | Duplicate an object. ``1.dup'' becomes ``[1, 1].'' ``1.dup(3)'' becomes ``[1, 1, 1]'' and so on                                                                            |
| explin              |        | Convert an exponential input range (inMin, inMax) to a linear output range (outMin, outMax)                                                                                |
| exprand             |        | \cd{exprand(low, high)}: Generate a random number $x$ where $low \le x \le high$, with an exponential distribution                                                         |
| exprange            |        | Converts a UGen's range into a different exponential range                                                                                                                 |
| fadeTime            |        | Controls the time it takes to crossfade between sources in a \ci{NodeProxy}. When used on a \ci{ProxySpace}, it applies to all proxies in that space                       |
| fill                |        | \cd{Array.fill(size, item)} makes a new Array of \ci{size} elements based on \ci{item}. Functions are evaluated (good for random numbers)                                  |
| flat                |        | Convert any nested array into a single array, e.g. \cd{[[0, 1, 2], [3, 4]].flat} returns \cd{[0, 1, 2, 3, 4]}                                                              |
| fold                |        | Constrain a number within a range. The boundaries are like mirrors: A value above the maximum gets reflected back into the range                                           |
| for                 |        | A loop that counts from a beginning to an ending number. It has a more convenient shortcut syntax: \cd{(start .. end).do}                                                  |
| fork                |        | \cd{\{ ... \}.fork} or \cd{fork \{ ... \}} is a convenient shortcut syntax for \cd{Routine(\{ ... \}).play}                                                                |
| forSeries           |        | A loop that counts from a beginning to an ending number, by a skip determined from a given second number. Shortcut syntax: \cd{(start, second .. end).do}                  |
| free                |        | Removes a resource that was previously allocated, including Buffers and MIDI or OSC responders                                                                             |
| front               |        | Brings a GUI window to the front. Windows are invisible until you call \ci{front}                                                                                          |
| if                  |        | A branching structure common in many programming languages. If the condition is true, do the ``true'' branch; otherwise, the ``false'' branch                              |
| includes            |        | Answers \ci{true} if a collection (the receiver) contains the identical item, \ci{false} if not                                                                            |
| includesEqual       |        | Answers \ci{true} if a collection (the receiver) contains an equivalent item, \ci{false} if not                                                                            |
| inclusivelyBetween  |        | A Boolean condition: true if the receiver is between the \ci{lo} and \ci{hi} arguments. If $x$ is the receiver, $lo \le x \le hi$                                          |
| insert              |        | Put a new item into an array, and slide other items to the right to make room for it. \cd{[0, 1, 2].insert(1, 10)} $\to$ \cd{[0, 10, 1, 2]}                                |
| integrate           |        | Given an array, return a new array where each item is the sum of all the previous original items                                                                           |
| keys                |        | Called on a Dictionary, returns a set of unique keys (without their values)                                                                                                |
| keysValuesDo        |        | A variation on \ci{do}, for Dictionaries. The loop function receives \cd{\textbar key, value, counter\textbar} as arguments                                                |
| kr                  |        | Create a control-rate instance of a UGen. The arguments to ``kr'' establish connections to other UGens                                                                     |
| langPort            |        | \ci{NetAddr.langPort} returns the network port that SuperCollider is listening to. Use this as the outgoing port in TouchOSC or mrmr                                       |
| lincurve            |        | Convert a linear input range (inMin, inMax) to a curved output range (outMin, outMax) with a user-specified curve factor                                                   |
| linen               |        | \cd{Env.linen} makes a linear (trapezoidal) envelope                                                                                                                       |
| linexp              |        | Convert a linear input range (inMin, inMax) to an exponential output range (outMin, outMax)                                                                                |
| linlin              |        | Convert a linear input range (inMin, inMax) to a linear output range (outMin, outMax)                                                                                      |
| loop                |        | A flow-of-control structure that repeats the same block of code several times. Typical loops are \ci{for}, \ci{do} and \ci{while}                                          |
| max                 |        | Between \ci{a} and \ci{b}, return whichever is higher                                                                                                                      |
| maxIndex            |        | Returns the index of the largest item in a collection                                                                                                                      |
| maxItem             |        | Returns the largest item in a collection                                                                                                                                   |
| midicps             |        | Convert a MIDI note number to a frequency in Hz                                                                                                                            |
| midiratio           |        | Convert a number of semitones into a frequency factor                                                                                                                      |
| min                 |        | Between \ci{a} and \ci{b}, return whichever is lower                                                                                                                       |
| minIndex            |        | Returns the index of the smallest item in a collection                                                                                                                     |
| minItem             |        | Returns the smallest item in a collection                                                                                                                                  |
| neg                 |        | Same result as \cd{-1 * n}, but slightly faster                                                                                                                            |
| new                 |        | A class method that creates an instance of a class, and usually initializes it with data supplied in the arguments                                                         |
| newPostSend         |        | Creates a true post-fader send from one \ci{MixerChannel} to another                                                                                                       |
| next                |        | When called on a Routine (or any Stream), returns the stream's next yield value                                                                                            |
| pairsDo             |        | ``Do'' a function over pairs of items in an array. No item will be touched more than once. Compare \ci{doAdjacentPairs}                                                    |
| perc                |        | \cd{Env.perc} makes a percussive envelope (quick attack, curved decay)                                                                                                     |
| play                |        | Initiate a process that will run for some time into the future. Many kinds of objects know how to ``play'': Functions, Patterns, Events, Tasks etc                         |
| playfx              |        | Plays an object as an insert effect on a \ci{MixerChannel}                                                                                                                 |
| postln              |        | Print an object as a string into the post window                                                                                                                           |
| push                |        | Set the given environment (including ProxySpace) to be current and active. Environment variables will then refer to that environment                                       |
| put                 |        | Put an object into a slot in an indexed collection (e.g. Array or Dictionary). Shortcut syntax: \cd{collection[index] = item}                                              |
| quant               |        | Sets the quantization time of a NodeProxy or pattern proxy. See the \ci{Quant} help file for details on the allowed values                                                 |
| rand                |        | \cd{num.rand}: Generate a random number $x$ where $0 \le x < num$                                                                                                          |
| rand2               |        | \cd{num.rand}: Generate a random number $x$ where $-num \le x < num$                                                                                                       |
| range               |        | Converts a UGen's range into a different linear range                                                                                                                      |
| read                |        | \cd{Buffer.read()} creates a new buffer in the server and fills it with audio from a sound file                                                                            |
| readChannel         |        | Like \cd{Buffer.read}, but reads one or more channels in an order you choose                                                                                               |
| reciprocal          |        | Calculates $\frac{1}{n}$, but slightly faster than \cd{1 / n}                                                                                                              |
| reject              |        | Returns a new collection, containing items from another collection that do not satisfy a condition provided as a test function                                             |
| release             |        | Tell a synth node on the server to fade out, according to the R segment of an ASR or ADSR envelope                                                                         |
| releaseDependants   |        | Related to Model-View-Controller design, this is an emergency method to remove all controllers from a model                                                                |
| remove              |        | Remove the given item from the collection. Returns the item, not the collection---so you can't write \cd{x.remove(1).remove(2)}. Also releases some object types           |
| removeAll           |        | Removes all the given items from the collection                                                                                                                            |
| removeAt            |        | Remove the item at the given index from the collection. Returns the item, not the collection                                                                               |
| removeDependant     |        | \cd{model.removeDependant(listener)} disconnects that particular listener from the model                                                                                   |
| removeFunc          |        | Given a \ci{FunctionList}, remove one function from it                                                                                                                     |
| reset               |        | Revert an object to some initial state. On a Routine or Task, e.g., goes back to the beginning of the processing function                                                  |
| resourceDir         |        | \cd{Platform.resourceDir} points to a directory of extra resources, which are part of a normal SC installation                                                             |
| round               |        | Round a number to the nearest division---by default, 1 (integers) but it may also be fractional                                                                            |
| rrand               |        | \cd{rrand(low, high)}: Generate a random number $x$ where $low \le x \le high$                                                                                             |
| sched               |        | Schedule an activity to happen a certain number of beats/seconds in the future (i.e., later than now)                                                                      |
| schedAbs            |        | Schedule an activity to happen at a specific (``absolute'') time                                                                                                           |
| scramble            |        | On an ordered collection, rearrange the items into a random order. Pshuf is the corresponding pattern                                                                      |
| sect                |        | Given two sets, return the \emph{intersection} between them: the items that exist in both sets. May also be written \cd{setA \& setB}                                      |
| select              |        | Returns a new collection, containing items from another collection that satisfy a condition provided as a test function                                                    |
| sendBundle          |        | Sends several Open Sound Control messages in one packet to the receiver (\ci{NetAddr}). A non-nil latency value attaches a timestamp                                       |
| sendCollection      |        | Transfers an array of numbers in the language into a server-side Buffer, using OSC messages. \ci{loadCollection} does the same with a temporary disk file                  |
| sendMsg             |        | Sends an Open Sound Control message to the IP address and port named in the receiver, which must be a \ci{NetAddr}                                                         |
| separate            |        | Group items from a flat array into sub-arrays, based on a condition (function) applied to items that are next to each other                                                |
| set                 |        | On a synth node or NodeProxy, set a new value for a control input: \cd{n.set(\textbackslash name, value...)}                                                               |
| setEvent            |        | Called on a ProxySpace, setEvent returns an event prepared to set controls within that ProxySpace                                                                          |
| sine                |        | \cd{Env.sine} makes an attack-decay envelope with sine-shaped segments. More or less a bell curve                                                                          |
| sine1               |        | Fill a Buffer with a waveform based on harmonic amplitudes, in wavetable format                                                                                            |
| sine2               |        | Fill a Buffer with a waveform based on harmonic frequencies and amplitudes, in wavetable format                                                                            |
| sine3               |        | Fill a Buffer with a waveform based on harmonic frequencies, amplitudes and phases, in wavetable format                                                                    |
| sineFill            |        | Creates a new instance of Signal, and fills it with the sum of sinewaves based on given amplitudes and phases                                                              |
| size                |        | Returns the number of items in a collection                                                                                                                                |
| softclip            |        | Applies mild distortion to a signal. Input values below --6 dB are not distorted at all                                                                                    |
| sort                |        | On an ordered collection, sorts the items into a user-defined order. Takes a comparison function as an argument: ascending order is \cd{\{ \textbar a, b\textbar a < b \}} |
| sqrt                |        | Take the square root of a number $x$: $\sqrt{x}$                                                                                                                           |
| squared             |        | Square a number $x$: $x^2$                                                                                                                                                 |
| stop                |        | Stop a process that was previously started by \ci{play}                                                                                                                    |
| sum                 |        | Add all the items in a collection. Assumes the items are numbers                                                                                                           |
| switch              |        | A branching control structure that looks up the action for a specific value                                                                                                |
| symmetricDifference |        | Given two sets, return the items that exist in only one of the two, but not both. May also be written \cd{setA -- setB}                                                    |
| sync                |        | In a Routine, call \ci{sync} on a server to wait for any pending asynchronous operations to finish                                                                         |
| tanh                |        | A math operator that takes the \emph{hyperbolic tangent} of a number. \ci{tanh} is good for distortion                                                                     |
| union               |        | Given two sets, return their \emph{union}: the items that exist in either set, or both. May also be written \cd{setA \textbar setB}                                        |
| update              |        | This method receives notifications sent by \ci{changed}                                                                                                                    |
| value               |        | Evaluate an object. Usually this is the object itself. Functions evaluate themselves and return the result. Other kinds of objects do special things when value'd          |
| values              |        | Called on a Dictionary, returns a list (array) of the values. It must be an array, to allow duplicate values                                                               |
| wait                |        | In a Routine, same as \ci{yield}, but works only for numbers. Used for deltas (wait times).                                                                                |
| while               |        | A looping structure common in many programming languages. If a condition is true, run the loop body again. If false, stop                                                  |
| wrap                |        | Constrain a number within a range. If the number goes above the upper boundary, it wraps around to the lower boundary                                                      |
| yield               |        | Within a Routine or Task, return a value to the caller and wait for the next request                                                                                       |


* UGens								   :noexport:
#+name: ugens
| Type  | Term          | Description                                                                                                                                                    | Arguments                                                                                        |
|-------+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------|
| Buf   | BufChannels   | Outputs the number of channels in a buffer. \ci{ir} or \ci{kr}                                                                                                 | bufnum                                                                                           |
| Buf   | BufDur        | Outputs the buffer's duration, in seconds. \ci{ir} or \ci{kr}                                                                                                  | bufnum                                                                                           |
| Buf   | BufFrames     | Outputs the number of frames in a buffer. \ci{ir} or \ci{kr}                                                                                                   | bufnum                                                                                           |
| Buf   | BufRateScale  | Outputs the buffer's sample rate divided by the server's. Used as a rate input, it ensures the sample will play at its original speed. \ci{ir} or \ci{kr}      | bufnum                                                                                           |
| Buf   | BufSampleRate | Outputs a buffer's sample rate (because a file loaded from disk may be at a different rate from the server). \ci{ir} or \ci{kr}                                | bufnum                                                                                           |
| Buf   | PlayBuf       | Play back a sample audio in a server Buffer. The entire sample must be loaded in memory (no streaming). See also DiskIn, VDiskIn.                              | numChannels, bufnum, rate, trigger, startPos, loop, doneAction                                   |
| Buf   | Shaper        | Performs waveshaping on the input signal, reading the transfer function from a buffer                                                                          | bufnum, in                                                                                       |
| Chaos | LinCongL      | Linear-congruent chaos generator. Has N and C variants                                                                                                         | See helpfile                                                                                     |
| Chaos | QuadL         | Quadratic-map chaos generator. Has N and C variants                                                                                                            | See helpfile                                                                                     |
| Ctl   | EnvGen        | Envelope Generator. Produces the envelope signal from an Env specification                                                                                     | envelope, gate, levelScale, levelBias, timeScale, doneAction                                     |
| Ctl   | Lag           | Smooth out a control signal by sliding (exponentially) from the old value to the new, in a given time. See also \ci{VarLag}                                    | in, lagTime                                                                                      |
| Ctl   | Line          | A straight line from \ci{start} to \ci{end}, in \ci{dur} seconds                                                                                               | start, end, dur                                                                                  |
| Ctl   | NamedControl  | Explicitly create a control input with a given name. You may initialize the control with an array, to get an arrayed control                                   | name, values, lags, fixedLag                                                                     |
| Ctl   | Phasor        | A straight line that loops around at the boundaries. Good for cyclical inputs, like phase or buffer position                                                   | trig, rate, start, end, resetPos                                                                 |
| Ctl   | VarLag        | Smooth out a control signal by sliding from the old value to the new, using any of \ci{Env}'s curvature styles (often linear)                                  | in, time, curvature, warp, start                                                                 |
| Ctl   | XLine         | An exponentially-curved line from \ci{start} to \ci{end}, in \ci{dur} seconds. \ci{start} and \ci{end} must be the same sign and non-zero                      | start, end, dur                                                                                  |
| Delay | AllpassL      | An allpass feedback delay with linear interpolation. See AllpassN for no interpolation and AllpassC for cubic                                                  | in, maxdelaytime, delaytime, decaytime                                                           |
| Delay | CombL         | A feedback delay with linear interpolation. See CombN for no interpolation and CombC for cubic                                                                 | in, maxdelaytime, delaytime, decaytime                                                           |
| Delay | DelayL        | A simple delay line, with no feedback. L means linear interpolation; see DelayN for no interpolation and DelayC for cubic                                      | in, maxdelaytime, delaytime                                                                      |
| Dyn   | Limiter       | A hard limiter. The output signal will never exceed the given maximum                                                                                          | in, level, dur                                                                                   |
| FFT   | PartConv      | A partitioned-convolution UGen, suitable for the long impulse responses frequently used in convolution reverb                                                  | in, fftsize, irbufnum                                                                            |
| Filt  | BHiPass       | A resonant highpass filter, like \ci{RHPF} but slightly different internals                                                                                    | in, freq, rq                                                                                     |
| Filt  | BHiShelf      | A high-shelving EQ filter                                                                                                                                      | in, freq, rs, db                                                                                 |
| Filt  | BLowPass      | A resonant lowpass filter, like \ci{RLPF} but slightly different internals                                                                                     | in, freq, rq                                                                                     |
| Filt  | BLowShelf     | A low-shelving EQ filter                                                                                                                                       | in, freq, rs, db                                                                                 |
| Filt  | BPeakEQ       | An EQ filter, providing the standard bell-shaped boost or cut                                                                                                  | in, freq, rq, db                                                                                 |
| Filt  | BPF           | Bandpass filter                                                                                                                                                | in, freq, rq                                                                                     |
| Filt  | DynKlank      | A set of ringing filters. Calculates as a sum of Ringz units, but it has the same arguments as Klank                                                           | specificationsArrayRef, input, freqscale, freqoffset, decayscale                                 |
| Filt  | Formlet       | A ringing filter, but whose impulse response has a smoother attack phase. Useful for synthesizing vocal-like sounds                                            | in, freq, attacktime, decaytime                                                                  |
| Filt  | HPF           | Butterworth highpass filter                                                                                                                                    | in, freq                                                                                         |
| Filt  | Klank         | A set of ringing filters (just like Ringz). The filters' parameters are fixed (can't change them within the Synth), but it's more efficient. See also DynKlank | specificationsArrayRef, input, freqscale, freqoffset, decayscale                                 |
| Filt  | LPF           | Butterworth lowpass filter                                                                                                                                     | in, freq                                                                                         |
| Filt  | RHPF          | Resonant highpass filter                                                                                                                                       | in, freq, rq                                                                                     |
| Filt  | Ringz         | A ringing filter, similar to a bandpass filter but controlled by a ringing decay time, not \ci{rq}                                                             | in, freq, decaytime                                                                              |
| Filt  | RLPF          | Resonant lowpass filter                                                                                                                                        | in, freq, rq                                                                                     |
| Grain | GrainBuf      | An all-purpose granular synthesis UGen, taking the grains from a Buffer                                                                                        | numChannels, trigger, dur, sndbuf, rate, pos, interp, pan, envbufnum, maxGrains                  |
| Grain | PitchShift    | A granular pitch-shifter, for use on a live signal. Maximum range two octaves above and below. Allows slight time and pitch randomness                         | in, windowSize, pitchRatio, pitchDispersion, timeDispersion                                      |
| Grain | TGrains       | A triggered granular synthesis UGen. Every grain has a sine-shaped envelope                                                                                    | numChannels, trigger, bufnum, rate, centerPos, dur, pan, amp, interp                             |
| Info  | ControlDur    | \cd{ControlDur.ir} in a synthesis function provides the duration of one control block = $\frac{blocksize}{sr}$                                                 | none                                                                                             |
| Info  | ControlRate   | \cd{ControlRate.ir} in a synthesis function provides the server's control rate = $\frac{sr}{blocksize}$                                                        | none                                                                                             |
| Info  | SampleDur     | \cd{SampleDur.ir} in a synthesis function provides the duration of one sample = $\frac{1}{sr}$                                                                 | none                                                                                             |
| Info  | SampleRate    | \cd{SampleRate.ir} in a synthesis function provides the server's sample rate                                                                                   | none                                                                                             |
| IO    | In            | Read a signal from one or more audio/control buses. For audio buses, the signal must have been written earlier in the calculation cycle                        | bus, numChannels                                                                                 |
| IO    | InFeedback    | Read the previous calculation cycle's signal from audio or control buses. Order of execution does not matter                                                   | bus, numChannels                                                                                 |
| IO    | LocalIn       | The top end of a feedback loop within a synthesis function. It receives a signal from a LocalOut later in the signal chain. Adds one control cycle of delay    | numChannels, default                                                                             |
| IO    | LocalOut      | The bottom end of a feedback loop. LocalOut routes its input to a LocalIn earlier in the signal chain                                                          | channelsArray                                                                                    |
| IO    | Out           | Writes one or more channels to an audio or control bus. Many \ci{Out} units can write to the same bus; their signals will be mixed                             | bus, channelsArray                                                                               |
| IO    | ReplaceOut    | Overwrite an audio or control bus with a new signal. Useful for effect processing                                                                              | bus, channelsArray                                                                               |
| Math  | BinaryOpUGen  | Performs a binary math operation where at least one of the two inputs is another UGen                                                                          | Not used directly                                                                                |
| Math  | Mix           | Mix a group of signals together (addition). Preserves stereo/multichannel arrangement. Includes optimizations not found in \ci{sum}                            | none                                                                                             |
| Math  | UnaryOpUGen   | Performs a unary math operation (neg, abs, log etc.) on another UGen                                                                                           | Not used directly                                                                                |
| Model | Pluck         | Implements the Karplus-Strong algorithm for synthesis of plucked strings                                                                                       | in, trig, maxdelaytime, delaytime, decaytime, coef                                               |
| Osc   | Blip          | ``Band-Limited ImPulse.'' Generates a given number of harmonics at equal volumes. Great with resonating filters                                                | freq, numharm                                                                                    |
| Osc   | BrownNoise    | A noise generator whose spectrum drops 6 dB every octave. Produced by ``Brownian motion'' in which each sample adds a random number to the previous sample     | mul, add                                                                                         |
| Osc   | COsc          | A chorusing wavetable oscillator, which detunes two frequencies by the given number of beats                                                                   | bufnum, freq, beats                                                                              |
| Osc   | Formant       | A formant oscillator, for (somewhat) vocal-like sounds                                                                                                         | fundfreq, formfreq, bwfreq                                                                       |
| Osc   | LFGauss       | A waveform modeled after the Gaussian normal distribution (``bell curve'')                                                                                     | duration, width, iphase, loop                                                                    |
| Osc   | LFNoise0      | Generates \ci{freq} random numbers per second, holding the value between each one                                                                              | freq                                                                                             |
| Osc   | LFNoise1      | Generates \ci{freq} random numbers per second and makes a linear ramp between each one                                                                         | freq                                                                                             |
| Osc   | LFNoise2      | Generates \ci{freq} random numbers per second and makes a quadratic-interpolation curve between each one                                                       | freq                                                                                             |
| Osc   | LFPulse       | Non-band-limited pulse wave, intended as an LFO for modulation. Unlike most other oscillators, its output range is unipolar (0--1)                             | freq, iphase, width                                                                              |
| Osc   | LFSaw         | Non-band-limited sawtooth oscillator                                                                                                                           | freq, iphase                                                                                     |
| Osc   | LFTri         | Non-band-limited triangle wave. It may be used as an audio oscillator because of limited aliasing                                                              | freq, iphase                                                                                     |
| Osc   | Osc           | The most basic wavetable oscillator                                                                                                                            | bufnum, freq, phase                                                                              |
| Osc   | PinkNoise     | A noise generator with ``equal power'' across all frequencies, by dropping 3 dB every octave. Also known as $\frac{1}{f}$ noise                                | mul, add                                                                                         |
| Osc   | Pulse         | Band-limited pulse wave oscillator                                                                                                                             | freq, width                                                                                      |
| Osc   | Saw           | Band-limited sawtooth oscillator                                                                                                                               | freq                                                                                             |
| Osc   | SinOsc        | Sinewave oscillator                                                                                                                                            | freq, phase                                                                                      |
| Osc   | VarSaw        | Sawtooth oscillator with variable duty cycle. Not band-limited                                                                                                 | freq, iphase, width                                                                              |
| Osc   | VOsc          | A ``variable'' wavetable oscillator, which transitions smoothly between adjacent wavetable buffers                                                             | bufpos, freq, phase                                                                              |
| Osc   | VOsc3         | A three-frequency detuned wavetable oscillator, like VOsc. Very useful to simulate band-limited waveforms at lower CPU cost                                    | bufpos, freq1, freq2, freq3                                                                      |
| Osc   | WhiteNoise    | A noise generator containing all frequencies equally loudly. The sound is extremely bright                                                                     | mul, add                                                                                         |
| Pan   | Balance2      | Stereo-to-stereo balancer. When \ci{pos} is --1, you hear only the left channel; when +1, only the right channel                                               | left, right, pos, level                                                                          |
| Pan   | Pan2          | Mono-to-stereo panner. \ci{in} must be a mono signal. \ci{pos}: Full left is --1, right is +1                                                                  | in, pos, level                                                                                   |
| Rand  | ExpRand       | Generates a single random number with an exponential distribution at the beginning of a synth, and holds that value                                            | lo, hi                                                                                           |
| Rand  | Rand          | Generates a single random number at the beginning of a synth, and holds that value                                                                             | lo, hi                                                                                           |
| Rand  | TExpRand      | Generates an exponentially-distributed random number in response to a trigger signal, holding each number until the next trigger                               | lo, hi, trig                                                                                     |
| Rand  | TRand         | Generates a random number in response to a trigger signal, holding each number until the next trigger                                                          | lo, hi, trig                                                                                     |
| Rev   | FreeVerb2     | A very simple, but decent-sounding, stereo-in/out reverb                                                                                                       | in, in2, mix, room, damp                                                                         |
| Rev   | GVerb         | A mono-in, stereo-out reverb with more control options than \ci{FreeVerb2}                                                                                     | in, roomsize, revtime, damping, inputbw, spread, drylevel, earlyreflevel, taillevel, maxroomsize |
| Trig  | Dust          | Produces randomly timed triggers, averaging \emph{density} triggers per second                                                                                 | density                                                                                          |
| Trig  | Impulse       | Produces triggers at equal time intervals---single sample impulses, \emph{freq} times per second                                                               | freq, phase                                                                                      |


* src blocks 							   :noexport:

#+name: makegloss
#+begin_src emacs-lisp :var tbl=gloss glosstype='nil :exports none :results value latex
  (let ((str "")
        (gltype (if glosstype (format "type=%s," glosstype) "")))
    (pop tbl)
    (pop tbl)
    (while tbl
      (let ((item (pop tbl)))
        (setq str
              (concat str
                      (format "\\newglossaryentry{%s}{%sname={%s},%sdescription={%s}}\n"
                              (car item)
                              gltype
                              (pop item)
                              (let ((plural (pop item)))
                                (if (string= plural "")
                                    ""
                                  (format "plural={%s}," plural)))
                              (car item))))))
    str)
#+end_src

#+name: ugengloss
#+begin_src emacs-lisp :var tbl=ugens :exports none :results value latex
(let ((str ""))
  (pop tbl)
  (pop tbl)
  (while tbl
    (let ((item (car tbl)))
      (pop item)
      (setq str (concat str (format "\\newglossaryentry{%s}{type=ugen,name={%s},description={%s. Inputs: (%s)}}\n"
  		   (car item)
  		   (pop item)
  		   (pop item)
  		   (car item))))
      (setq tbl (cdr tbl))))
  str)
#+end_src
